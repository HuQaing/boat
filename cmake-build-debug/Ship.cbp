<?xml version="1.0" encoding="UTF-8"?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6"/>
	<Project>
		<Option title="Ship"/>
		<Option makefile_is_custom="1"/>
		<Option compiler="gcc"/>
		<Option virtualFolders="CMake Files\;"/>
		<Build>
			<Target title="all">
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="Ship">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Ship.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 Ship"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="Ship/fast">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Ship.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 Ship/fast"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serial_test">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/serial_test.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 serial_test"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serial_test/fast">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/serial_test.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 serial_test/fast"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="client">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/client.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 client"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="client/fast">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/client.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 client/fast"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serve">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/serve.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 serve"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="serve/fast">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/serve.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 serve/fast"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="edit_cache">
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="json_test">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/json_test.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 json_test"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="json_test/fast">
				<Option output="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/json_test.exe" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/kalman_filter"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/navigation"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/Eigen"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/c_socket"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/json"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty/nlohmann"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/3rdparty"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/serial_communication"/>
					<Add directory="D:/wumode/Documents/Code/CPP/Boat/socket_communication"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/mingw32"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include/c++/backward"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../include"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/include-fixed"/>
					<Add directory="c:\mingw\bin\../lib/gcc/mingw32/6.3.0/../../../../mingw32/include"/>
				</Compiler>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 json_test/fast"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rebuild_cache">
				<Option working_dir="D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
					<CompileFile command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="C:/MinGW/bin/mingw32-make.exe -f &quot;D:/wumode/Documents/Code/CPP/Boat/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
		</Build>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinystr.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinystr.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinyxml.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinyxml.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinyxmlerror.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/3rdparty/tiny_xml/tinyxmlparser.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/boat.cc">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/boat.h">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/boat_config.h">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/c_socket/client.c">
			<Option target="client"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/c_socket/server.cc">
			<Option target="serve"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum/datum.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/datum/datum.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm/utm.cpp">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/geo_to_utm/utm/utm.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/json_test.cc">
			<Option target="json_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/kalman_filter/KalmanFilter.h">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/main.cc">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/navigation/navigation.cc">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/navigation/navigation.h">
			<Option target="Ship"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/navigation/navigation_config.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/serial_communication/serial_communication.cc">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/serial_communication/serial_communication.h">
			<Option target="Ship"/>
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/socket_communication/socket_communication.cc">
			<Option target="Ship"/>
			<Option target="json_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/socket_communication/socket_communication.h">
			<Option target="Ship"/>
			<Option target="json_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/test.cc">
			<Option target="serial_test"/>
		</Unit>
		<Unit filename="D:/wumode/Documents/Code/CPP/Boat/CMakeLists.txt">
			<Option virtualFolder="CMake Files\"/>
		</Unit>
	</Project>
</CodeBlocks_project_file>
